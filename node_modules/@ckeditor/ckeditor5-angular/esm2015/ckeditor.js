/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.
 * For licensing, see LICENSE.md.
 */
/**
 * Basic typings for the CKEditor5 elements.
 */
export var CKEditor5;
(function (CKEditor5) {
    /**
     * The CKEditor5 editor constructor.
     * @record
     */
    function EditorConstructor() { }
    CKEditor5.EditorConstructor = EditorConstructor;
    if (false) {
        /**
         * @param {?} sourceElementOrData
         * @param {?=} config
         * @return {?}
         */
        EditorConstructor.prototype.create = function (sourceElementOrData, config) { };
    }
    /**
     * The CKEditor5 editor config.
     * @record
     */
    function Config() { }
    CKEditor5.Config = Config;
    /**
     * The event object passed to CKEditor5 event callbacks.
     *
     * See https://ckeditor.com/docs/ckeditor5/latest/api/module_utils_eventinfo-EventInfo.html
     * @record
     * @template EventName
     */
    function EventInfo() { }
    CKEditor5.EventInfo = EventInfo;
    if (false) {
        /** @type {?} */
        EventInfo.prototype.name;
        /** @type {?} */
        EventInfo.prototype.path;
        /** @type {?} */
        EventInfo.prototype.source;
        /** @type {?|undefined} */
        EventInfo.prototype.return;
        /**
         * @return {?}
         */
        EventInfo.prototype.off = function () { };
        /**
         * @return {?}
         */
        EventInfo.prototype.stop = function () { };
    }
    /**
     * The base Editor class.
     *
     * See https://ckeditor.com/docs/ckeditor5/latest/api/module_core_editor_editor-Editor.html
     * @record
     */
    function BaseEditor() { }
    CKEditor5.BaseEditor = BaseEditor;
    if (false) {
        /** @type {?} */
        BaseEditor.prototype.commands;
        /** @type {?} */
        BaseEditor.prototype.config;
        /** @type {?} */
        BaseEditor.prototype.conversion;
        /** @type {?} */
        BaseEditor.prototype.data;
        /** @type {?} */
        BaseEditor.prototype.editing;
        /** @type {?} */
        BaseEditor.prototype.keystrokes;
        /** @type {?} */
        BaseEditor.prototype.locale;
        /** @type {?} */
        BaseEditor.prototype.model;
        /** @type {?} */
        BaseEditor.prototype.plugins;
        /** @type {?} */
        BaseEditor.prototype.state;
        /** @type {?} */
        BaseEditor.prototype.isReadOnly;
        /* Skipping unhandled member: [ property: string ]: any;*/
        /**
         * @param {?} events
         * @return {?}
         */
        BaseEditor.prototype.delegate = function (events) { };
        /**
         * @return {?}
         */
        BaseEditor.prototype.destroy = function () { };
        /**
         * @param {?} commandName
         * @param {...?} params
         * @return {?}
         */
        BaseEditor.prototype.execute = function (commandName, params) { };
        /**
         * @param {?} eventName
         * @param {?=} args
         * @return {?}
         */
        BaseEditor.prototype.fire = function (eventName, args) { };
        /**
         * @param {?} emitter
         * @param {?} eventName
         * @param {?} callback
         * @param {?=} options
         * @return {?}
         */
        BaseEditor.prototype.listenTo = function (emitter, eventName, callback, options) { };
        /**
         * @param {?} eventName
         * @param {?} callback
         * @return {?}
         */
        BaseEditor.prototype.off = function (eventName, callback) { };
        /**
         * @param {?} eventName
         * @param {?} callback
         * @param {?=} options
         * @return {?}
         */
        BaseEditor.prototype.on = function (eventName, callback, options) { };
        /**
         * @param {?} eventName
         * @param {?} callback
         * @param {?=} options
         * @return {?}
         */
        BaseEditor.prototype.once = function (eventName, callback, options) { };
        /**
         * @param {?} emitter
         * @param {?} eventName
         * @param {?} callback
         * @return {?}
         */
        BaseEditor.prototype.stopListening = function (emitter, eventName, callback) { };
        /**
         * @param {...?} args
         * @return {?}
         */
        BaseEditor.prototype.t = function (args) { };
    }
    /**
     * The CKEditor5 DataApi interface.
     *
     * See https://ckeditor.com/docs/ckeditor5/latest/api/module_core_editor_utils_dataapimixin-DataApi.html.
     * @record
     */
    function DataApi() { }
    CKEditor5.DataApi = DataApi;
    if (false) {
        /**
         * @return {?}
         */
        DataApi.prototype.getData = function () { };
        /**
         * @param {?} data
         * @return {?}
         */
        DataApi.prototype.setData = function (data) { };
    }
    /**
     * A CKEditor5 editor that implements the
     * [DataApi interface](https://ckeditor.com/docs/ckeditor5/latest/api/module_core_editor_utils_dataapimixin-DataApi.html).
     * E.g. the `ClassicEditor`, `InlineEditor`, etc.
     * @record
     */
    function Editor() { }
    CKEditor5.Editor = Editor;
    /**
     * @record
     */
    function ContextWatchdog() { }
    CKEditor5.ContextWatchdog = ContextWatchdog;
    if (false) {
        /** @type {?} */
        ContextWatchdog.prototype.context;
        /**
         * @param {?} items
         * @return {?}
         */
        ContextWatchdog.prototype.add = function (items) { };
        /**
         * @param {?} items
         * @return {?}
         */
        ContextWatchdog.prototype.remove = function (items) { };
        /**
         * @param {?} itemId
         * @return {?}
         */
        ContextWatchdog.prototype.getItem = function (itemId) { };
        /**
         * @param {?} itemId
         * @param {?} itemType
         * @param {?} watchdog
         * @return {?}
         */
        ContextWatchdog.prototype.addItemWatchdog = function (itemId, itemType, watchdog) { };
    }
    /**
     * @record
     */
    function EditorWatchdog() { }
    CKEditor5.EditorWatchdog = EditorWatchdog;
    if (false) {
        /** @type {?} */
        EditorWatchdog.prototype.editor;
    }
    /**
     * @record
     * @template T
     */
    function Watchdog() { }
    CKEditor5.Watchdog = Watchdog;
    if (false) {
        /**
         * @param {?} creator
         * @return {?}
         */
        Watchdog.prototype.setCreator = function (creator) { };
        /**
         * @param {?} destructor
         * @return {?}
         */
        Watchdog.prototype.setDestructor = function (destructor) { };
        /**
         * @param {?} event
         * @param {?} callback
         * @return {?}
         */
        Watchdog.prototype.on = function (event, callback) { };
        /**
         * @return {?}
         */
        Watchdog.prototype.destroy = function () { };
        /**
         * @param {...?} args
         * @return {?}
         */
        Watchdog.prototype.create = function (args) { };
    }
})(CKEditor5 || (CKEditor5 = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2tlZGl0b3IuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AY2tlZGl0b3IvY2tlZGl0b3I1LWFuZ3VsYXIvIiwic291cmNlcyI6WyJja2VkaXRvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQVFBLE1BQU0sS0FBVyxTQUFTLENBb0d6QjtBQXBHRCxXQUFpQixTQUFTOzs7OztJQUt6QixnQ0FFQzs7Ozs7Ozs7UUFEQSxnRkFBc0Y7Ozs7OztJQU12RixxQkFFQzs7Ozs7Ozs7O0lBT0Qsd0JBUUM7Ozs7UUFQQSx5QkFBeUI7O1FBQ3pCLHlCQUFxQjs7UUFDckIsMkJBQXFCOztRQUNyQiwyQkFBYTs7OztRQUViLDBDQUFZOzs7O1FBQ1osMkNBQWE7Ozs7Ozs7O0lBUWQseUJBMEJDOzs7O1FBekJBLDhCQUF1Qjs7UUFDdkIsNEJBQXFCOztRQUNyQixnQ0FBeUI7O1FBQ3pCLDBCQUFtQjs7UUFDbkIsNkJBQXNCOztRQUN0QixnQ0FBeUI7O1FBQ3pCLDRCQUFxQjs7UUFDckIsMkJBQW9COztRQUNwQiw2QkFBc0I7O1FBQ3RCLDJCQUF1RDs7UUFFdkQsZ0NBQW9COzs7Ozs7UUFFcEIsc0RBQWtDOzs7O1FBQ2xDLCtDQUF5Qjs7Ozs7O1FBQ3pCLGtFQUFzRDs7Ozs7O1FBQ3RELDJEQUEyQzs7Ozs7Ozs7UUFDM0MscUZBQXFGOzs7Ozs7UUFDckYsOERBQW1EOzs7Ozs7O1FBQ25ELHNFQUFpRTs7Ozs7OztRQUNqRSx3RUFBbUU7Ozs7Ozs7UUFDbkUsaUZBQTJFOzs7OztRQUMzRSw2Q0FBMEI7Ozs7Ozs7O0lBVTNCLHNCQUdDOzs7Ozs7UUFGQSw0Q0FBa0I7Ozs7O1FBQ2xCLGdEQUE4Qjs7Ozs7Ozs7SUFRL0IscUJBQXNEOzs7OztJQUV0RCw4QkFNQzs7OztRQUxBLGtDQUFhOzs7OztRQUNiLHFEQUFpQzs7Ozs7UUFDakMsd0RBQWtEOzs7OztRQUNsRCwwREFBa0M7Ozs7Ozs7UUFDbEMsc0ZBQTRGOzs7OztJQUc3Riw2QkFFQzs7OztRQURBLGdDQUFlOzs7Ozs7SUFHaEIsdUJBTUM7Ozs7Ozs7UUFMQSx1REFBOEQ7Ozs7O1FBQzlELDZEQUFnRTs7Ozs7O1FBQ2hFLHVEQUE2RDs7OztRQUM3RCw2Q0FBeUI7Ozs7O1FBQ3pCLGdEQUF3Qzs7QUFFMUMsQ0FBQyxFQXBHZ0IsU0FBUyxLQUFULFNBQVMsUUFvR3pCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZSBDb3B5cmlnaHQgKGMpIDIwMDMtMjAyMCwgQ0tTb3VyY2UgLSBGcmVkZXJpY28gS25hYmJlbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIEZvciBsaWNlbnNpbmcsIHNlZSBMSUNFTlNFLm1kLlxuICovXG5cbi8qKlxuICogQmFzaWMgdHlwaW5ncyBmb3IgdGhlIENLRWRpdG9yNSBlbGVtZW50cy5cbiAqL1xuZXhwb3J0IG5hbWVzcGFjZSBDS0VkaXRvcjUge1xuXG5cdC8qKlxuXHQgKiBUaGUgQ0tFZGl0b3I1IGVkaXRvciBjb25zdHJ1Y3Rvci5cblx0ICovXG5cdGV4cG9ydCBpbnRlcmZhY2UgRWRpdG9yQ29uc3RydWN0b3Ige1xuXHRcdGNyZWF0ZSggc291cmNlRWxlbWVudE9yRGF0YTogSFRNTEVsZW1lbnQgfCBzdHJpbmcsIGNvbmZpZz86IENvbmZpZyApOiBQcm9taXNlPEVkaXRvcj47XG5cdH1cblxuXHQvKipcblx0ICogVGhlIENLRWRpdG9yNSBlZGl0b3IgY29uZmlnLlxuXHQgKi9cblx0ZXhwb3J0IGludGVyZmFjZSBDb25maWcge1xuXHRcdFsga2V5OiBzdHJpbmcgXTogYW55O1xuXHR9XG5cblx0LyoqXG5cdCAqIFRoZSBldmVudCBvYmplY3QgcGFzc2VkIHRvIENLRWRpdG9yNSBldmVudCBjYWxsYmFja3MuXG5cdCAqXG5cdCAqIFNlZSBodHRwczovL2NrZWRpdG9yLmNvbS9kb2NzL2NrZWRpdG9yNS9sYXRlc3QvYXBpL21vZHVsZV91dGlsc19ldmVudGluZm8tRXZlbnRJbmZvLmh0bWxcblx0ICovXG5cdGV4cG9ydCBpbnRlcmZhY2UgRXZlbnRJbmZvPEV2ZW50TmFtZSBleHRlbmRzIHN0cmluZz4ge1xuXHRcdHJlYWRvbmx5IG5hbWU6IEV2ZW50TmFtZTtcblx0XHRyZWFkb25seSBwYXRoOiBhbnlbXTtcblx0XHRyZWFkb25seSBzb3VyY2U6IGFueTtcblx0XHRyZXR1cm4/OiBhbnk7XG5cblx0XHRvZmYoKTogdm9pZDtcblx0XHRzdG9wKCk6IHZvaWQ7XG5cdH1cblxuXHQvKipcblx0ICogVGhlIGJhc2UgRWRpdG9yIGNsYXNzLlxuXHQgKlxuXHQgKiBTZWUgaHR0cHM6Ly9ja2VkaXRvci5jb20vZG9jcy9ja2VkaXRvcjUvbGF0ZXN0L2FwaS9tb2R1bGVfY29yZV9lZGl0b3JfZWRpdG9yLUVkaXRvci5odG1sXG5cdCAqL1xuXHRleHBvcnQgaW50ZXJmYWNlIEJhc2VFZGl0b3Ige1xuXHRcdHJlYWRvbmx5IGNvbW1hbmRzOiBhbnk7XG5cdFx0cmVhZG9ubHkgY29uZmlnOiBhbnk7XG5cdFx0cmVhZG9ubHkgY29udmVyc2lvbjogYW55O1xuXHRcdHJlYWRvbmx5IGRhdGE6IGFueTtcblx0XHRyZWFkb25seSBlZGl0aW5nOiBhbnk7XG5cdFx0cmVhZG9ubHkga2V5c3Ryb2tlczogYW55O1xuXHRcdHJlYWRvbmx5IGxvY2FsZTogYW55O1xuXHRcdHJlYWRvbmx5IG1vZGVsOiBhbnk7XG5cdFx0cmVhZG9ubHkgcGx1Z2luczogYW55O1xuXHRcdHJlYWRvbmx5IHN0YXRlOiAnaW5pdGlhbGl6aW5nJyB8ICdyZWFkeScgfCAnZGVzdHJveWVkJztcblxuXHRcdGlzUmVhZE9ubHk6IGJvb2xlYW47XG5cblx0XHRkZWxlZ2F0ZSggZXZlbnRzOiBzdHJpbmdbXSApOiBhbnk7XG5cdFx0ZGVzdHJveSgpOiBQcm9taXNlPHZvaWQ+O1xuXHRcdGV4ZWN1dGUoIGNvbW1hbmROYW1lOiBzdHJpbmcsIC4uLnBhcmFtczogYW55W10gKTogYW55O1xuXHRcdGZpcmUoIGV2ZW50TmFtZTogc3RyaW5nLCBhcmdzPzogYW55ICk6IGFueTtcblx0XHRsaXN0ZW5UbyggZW1pdHRlcjogYW55LCBldmVudE5hbWU6IHN0cmluZywgY2FsbGJhY2s6IEZ1bmN0aW9uLCBvcHRpb25zPzogYW55ICk6IHZvaWQ7XG5cdFx0b2ZmKCBldmVudE5hbWU6IHN0cmluZywgY2FsbGJhY2s6IEZ1bmN0aW9uICk6IHZvaWQ7XG5cdFx0b24oIGV2ZW50TmFtZTogc3RyaW5nLCBjYWxsYmFjazogRnVuY3Rpb24sIG9wdGlvbnM/OiBhbnkgKTogdm9pZDtcblx0XHRvbmNlKCBldmVudE5hbWU6IHN0cmluZywgY2FsbGJhY2s6IEZ1bmN0aW9uLCBvcHRpb25zPzogYW55ICk6IHZvaWQ7XG5cdFx0c3RvcExpc3RlbmluZyggZW1pdHRlcjogYW55LCBldmVudE5hbWU6IHN0cmluZywgY2FsbGJhY2s6IEZ1bmN0aW9uICk6IHZvaWQ7XG5cdFx0dCggLi4uYXJnczogYW55W10gKTogdm9pZDtcblxuXHRcdFsgcHJvcGVydHk6IHN0cmluZyBdOiBhbnk7XG5cdH1cblxuXHQvKipcblx0ICogVGhlIENLRWRpdG9yNSBEYXRhQXBpIGludGVyZmFjZS5cblx0ICpcblx0ICogU2VlIGh0dHBzOi8vY2tlZGl0b3IuY29tL2RvY3MvY2tlZGl0b3I1L2xhdGVzdC9hcGkvbW9kdWxlX2NvcmVfZWRpdG9yX3V0aWxzX2RhdGFhcGltaXhpbi1EYXRhQXBpLmh0bWwuXG5cdCAqL1xuXHRleHBvcnQgaW50ZXJmYWNlIERhdGFBcGkge1xuXHRcdGdldERhdGEoKTogc3RyaW5nO1xuXHRcdHNldERhdGEoIGRhdGE6IHN0cmluZyApOiB2b2lkO1xuXHR9XG5cblx0LyoqXG5cdCAqIEEgQ0tFZGl0b3I1IGVkaXRvciB0aGF0IGltcGxlbWVudHMgdGhlXG5cdCAqIFtEYXRhQXBpIGludGVyZmFjZV0oaHR0cHM6Ly9ja2VkaXRvci5jb20vZG9jcy9ja2VkaXRvcjUvbGF0ZXN0L2FwaS9tb2R1bGVfY29yZV9lZGl0b3JfdXRpbHNfZGF0YWFwaW1peGluLURhdGFBcGkuaHRtbCkuXG5cdCAqIEUuZy4gdGhlIGBDbGFzc2ljRWRpdG9yYCwgYElubGluZUVkaXRvcmAsIGV0Yy5cblx0ICovXG5cdGV4cG9ydCBpbnRlcmZhY2UgRWRpdG9yIGV4dGVuZHMgQmFzZUVkaXRvciwgRGF0YUFwaSB7fVxuXG5cdGV4cG9ydCBpbnRlcmZhY2UgQ29udGV4dFdhdGNoZG9nIGV4dGVuZHMgV2F0Y2hkb2c8YW55Pntcblx0XHRjb250ZXh0OiBhbnk7XG5cdFx0YWRkKCBpdGVtczogYW55ICk6IFByb21pc2U8dm9pZD47XG5cdFx0cmVtb3ZlKCBpdGVtczogc3RyaW5nIHwgc3RyaW5nW10gKTogUHJvbWlzZTx2b2lkPjtcblx0XHRnZXRJdGVtKCBpdGVtSWQ6IHN0cmluZyApOiBFZGl0b3I7XG5cdFx0YWRkSXRlbVdhdGNoZG9nKCBpdGVtSWQ6IHN0cmluZywgaXRlbVR5cGU6IHN0cmluZywgd2F0Y2hkb2c6IFdhdGNoZG9nPGFueT4gKTogUHJvbWlzZTx2b2lkPjtcblx0fVxuXG5cdGV4cG9ydCBpbnRlcmZhY2UgRWRpdG9yV2F0Y2hkb2cgZXh0ZW5kcyBXYXRjaGRvZzxFZGl0b3I+IHtcblx0XHRlZGl0b3I6IEVkaXRvcjtcblx0fVxuXG5cdGV4cG9ydCBpbnRlcmZhY2UgV2F0Y2hkb2c8VD4ge1xuXHRcdHNldENyZWF0b3IoIGNyZWF0b3I6ICggLi4uYXJnczogYW55W10gKSA9PiBQcm9taXNlPFQ+ICk6IHZvaWQ7XG5cdFx0c2V0RGVzdHJ1Y3RvciggZGVzdHJ1Y3RvcjogKCBpdGVtOiBUICkgPT4gUHJvbWlzZTx2b2lkPiApOiB2b2lkO1xuXHRcdG9uKCBldmVudDogc3RyaW5nLCBjYWxsYmFjazogKCAuLi5hcmdzOiBhbnkgKSA9PiBhbnkgKTogdm9pZDtcblx0XHRkZXN0cm95KCk6IFByb21pc2U8dm9pZD47XG5cdFx0Y3JlYXRlKCAuLi5hcmdzOiBhbnlbXSApOiBQcm9taXNlPHZvaWQ+O1xuXHR9XG59XG4iXX0=